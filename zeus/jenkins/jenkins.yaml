apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: jenkins
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: jenkins
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins
rules:
  - apiGroups: [""]
    resources:
      - pods
      - pods/exec
      - pods/log
      - pods/attach
      - services
      - endpoints
      - secrets
      - configmaps
      - persistentvolumeclaims
      - serviceaccounts
    verbs: ["get","list","watch","create","delete","patch","update"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get","list","watch","create","delete","patch","update"]
  - apiGroups: ["apps"]
    resources: ["deployments","replicasets"]
    verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: jenkins
roleRef:
  kind: ClusterRole
  name: jenkins
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      securityContext:
        fsGroup: 1000
      containers:
        - name: jenkins
          image: artifactory.gaming-guild.com/docker-hosted/jenkins-docker:latest
          ports:
            - containerPort: 8080
            - containerPort: 50000
          env:
            - name: ARTIFACTORY_URL
              value: artifactory.gaming-guild.com
            - name: ARTIFACTORY_USER
              value: admin
            - name: ARTIFACTORY_PASSWORD
              value: "@*Tf@0nq!aDw#6UEbWjN"
            - name: DOCKER_TLS_CERTDIR
              value: ""
            - name: DOCKER_HOST
              value: tcp://dind.jenkins.svc.cluster.local:2375
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  type: NodePort
  selector:
    app: jenkins
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30808
---
# apiVersion: traefik.io/v1alpha1
# kind: Middleware
# metadata:
#   name: https-redirect
#   namespace: jenkins
# spec:
#   redirectScheme:
#     scheme: https
#     permanent: true
# ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: jenkins
spec:
  ingressClassName: traefik
  # tls:
  #   - hosts:
  #       - jenkins.gaming-guild.com
  #     secretName: jenkins-tls
  rules:
    - host: jenkins.gaming-guild.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jenkins-service
                port:
                  number: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dind-graph-pvc
  namespace: jenkins
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dind
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dind
  template:
    metadata:
      labels:
        app: dind
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: dind
          image: docker:27.3.1-dind
          securityContext:
            privileged: true
          args:
            - --host=tcp://0.0.0.0:2375
            - --mtu=1450
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
          volumeMounts:
            - name: docker-graph
              mountPath: /var/lib/docker
      volumes:
        - name: docker-graph
          persistentVolumeClaim:
            claimName: dind-graph-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: dind
  namespace: jenkins
spec:
  selector:
    app: dind
  ports:
    - name: dind
      port: 2375
      targetPort: 2375